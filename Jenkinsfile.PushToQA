APPLICATIONS = ""
pipeline {
    agent any
    environment {
        REVISION = ""
    }
    stages {
        stage('init') {
            steps {
                script{
                    APPLICATIONS="sol-service-billing-view sol-service-billing-complement"
                }
            }
        }
        stage("init2") {
            steps{
                script{
                    sh '''
                        echo ${APPLICATIONS}
                        for app in ${APPLICATIONS} 
                        do
                            echo $app
                        done
                    '''
                }
            }  
        }
        stage("upgrade pom version") {
            when { expression { false } }   
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                    sh '''
                        version=$(git branch --remotes --sort=-refname --list origin/release*) # grep necesito la primer linea de esto
                        version1=1 #primer numero de la version
                        version2=4 #segund numero de la version
                        version3=0 #tercer numero de la version
                       
                        commits=$(git log -1 --pretty=format:%s --grep=".*enki")
                        if [ ! -z "$commits" ];then
                            version2=$((version2 + 1))
                        else 
                            commits=$(git log -1)
                            if [ ! -z "$commits" ];then
                                version3=$((version3 + 1))
                            fi
                        fi
                        
                        mvn versions:set -DnewVersion=$version1.$version2.$version3 -f sol-service-billing-view/pom.xml
                        mvn versions:commit -f sol-service-billing-view/pom.xml

                        git add .
                        git commit -m 'Triggered Build'
                        git push HEAD:main HEAD:origin/main
                    '''
                }
            }
        }
        stage("clean") {
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                    sh "mvn clean -f pom-sonar.xml"
                }
            }
        }
        stage("compile and update dependencies") {
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                    sh '''
                        for app in $APPLICATIONS 
                        do
                            mvn compile -Dmaven.test.skip=true -f $app/pom.xml -U
                        done
                    '''
                }
            }
        }
        stage("install") {
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                    sh '''
                        for app in $APPLICATIONS 
                        do
                            mvn install -Dmaven.test.skip=true -P weblogic,!tomcat -f $app/pom.xml
                        done
                    '''
                }
            }
        }
        stage("undeploy old and current versions") {
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                     sh '''
                        for app in $APPLICATIONS 
                        do
                            for app in $(mvn weblogic:list-apps -P dev -f sol-service-billing-view/pom.xml | tr -d "[:blank:]")
                            do
                                if [[ $appName == "$app-"* ||  $appName == "$app-"* ]]; then
                                    appName=$(echo $appName | sed 's/\\r//g')
                                    mvn weblogic:undeploy -P dev,weblogic,!tomcat -f $app/pom.xml -Dweblogic.name=$appName
                                fi
                            done
                        done
                     '''
                }
            }
        }
        stage("deploy") {
            steps {
                withMaven(
                    maven: "MAVEN_3_6_3",
                ) {
                    sh "mvn weblogic:deploy -P dev -f sol-service-billing-view/pom.xml"
                }
            }
        }
    }
}
